basePath: /
definitions:
  models.User:
    properties:
      age:
        type: integer
      createdAt:
        type: string
      deletedAt:
        type: string
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
      nationality:
        type: string
      surname:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is an API for enriching user info with age, gender, and nationality.
  title: Test Task
  version: "1.0"
paths:
  /createuser:
    post:
      consumes:
      - application/json
      description: Добавить нового пользователя и обогатить его данными
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Создание пользователя
      tags:
      - users
  /deleteuser:
    delete:
      consumes:
      - application/json
      description: Удалить пользователя по ID
      parameters:
      - description: ID пользователя
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User deleted
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
      summary: Удаление пользователя
      tags:
      - users
  /updateuser:
    put:
      consumes:
      - application/json
      description: Обновить пользователя по ID
      parameters:
      - description: user id
        in: query
        name: id
        required: true
        type: integer
      - description: updated data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Обновление пользователя
      tags:
      - users
  /user:
    get:
      consumes:
      - application/json
      description: Получить список пользователей с фильтрами и пагинацией
      parameters:
      - description: Номер страницы
        in: query
        name: page
        type: integer
      - description: Количество на странице
        in: query
        name: limit
        type: integer
      - description: Мин. возраст
        in: query
        name: age_min
        type: integer
      - description: Макс. возраст
        in: query
        name: age_max
        type: integer
      - description: Пол
        in: query
        name: gender
        type: string
      - description: Национальность
        in: query
        name: nationality
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Invalid request
          schema:
            type: string
      summary: Получение пользователей
      tags:
      - users
swagger: "2.0"
